// <auto-generated />
using System;
using HotelWorkOrderManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelWorkOrderManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220329151748_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HotelWorkOrderManagement.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ReplyId")
                        .HasColumnType("int");

                    b.Property<int>("TaskID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ReplyId");

                    b.HasIndex("TaskID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.EquipmentPiece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("InstalatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InstalationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastIntervention")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumOfInterventions")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstalatedById");

                    b.ToTable("EquipmentPieces");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MembersCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.Member", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("TechnicianId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Leader")
                        .HasColumnType("bit");

                    b.HasKey("GroupId", "TechnicianId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AsigneeGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("AsigneeIndividualId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipmentToRepairId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinishedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepetitiveSetting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RepetitiveStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AsigneeGroupId");

                    b.HasIndex("AsigneeIndividualId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EquipmentToRepairId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.TaskStateChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ExecutorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExecutorId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskStateChanges");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.Comment", b =>
                {
                    b.HasOne("HotelWorkOrderManagement.Models.User", "CreatedBy")
                        .WithMany("Comments")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelWorkOrderManagement.Models.Comment", "Reply")
                        .WithMany("Comments")
                        .HasForeignKey("ReplyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HotelWorkOrderManagement.Models.Task", "Task")
                        .WithMany("Comments")
                        .HasForeignKey("TaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Reply");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.EquipmentPiece", b =>
                {
                    b.HasOne("HotelWorkOrderManagement.Models.User", "InstalatedBy")
                        .WithMany("EquipmentPieces")
                        .HasForeignKey("InstalatedById");

                    b.Navigation("InstalatedBy");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.Member", b =>
                {
                    b.HasOne("HotelWorkOrderManagement.Models.Group", "Group")
                        .WithMany("Members")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelWorkOrderManagement.Models.User", "Technician")
                        .WithMany("Members")
                        .HasForeignKey("TechnicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.Task", b =>
                {
                    b.HasOne("HotelWorkOrderManagement.Models.Group", "AsigneeGroup")
                        .WithMany("Tasks")
                        .HasForeignKey("AsigneeGroupId");

                    b.HasOne("HotelWorkOrderManagement.Models.User", "AsigneeIndividual")
                        .WithMany("TaskAsignees")
                        .HasForeignKey("AsigneeIndividualId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HotelWorkOrderManagement.Models.User", "CreatedBy")
                        .WithMany("TaskCreators")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HotelWorkOrderManagement.Models.EquipmentPiece", "EquipmentToRepair")
                        .WithMany("Tasks")
                        .HasForeignKey("EquipmentToRepairId");

                    b.Navigation("AsigneeGroup");

                    b.Navigation("AsigneeIndividual");

                    b.Navigation("CreatedBy");

                    b.Navigation("EquipmentToRepair");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.TaskStateChange", b =>
                {
                    b.HasOne("HotelWorkOrderManagement.Models.User", "Executor")
                        .WithMany("TaskStateChanges")
                        .HasForeignKey("ExecutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelWorkOrderManagement.Models.Task", "Task")
                        .WithMany("TaskStateChanges")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Executor");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.Comment", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.EquipmentPiece", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.Group", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.Task", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("TaskStateChanges");
                });

            modelBuilder.Entity("HotelWorkOrderManagement.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("EquipmentPieces");

                    b.Navigation("Members");

                    b.Navigation("TaskAsignees");

                    b.Navigation("TaskCreators");

                    b.Navigation("TaskStateChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
