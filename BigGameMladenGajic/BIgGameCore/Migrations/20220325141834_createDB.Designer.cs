// <auto-generated />
using System;
using BigGame.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BIgGameCore.Migrations
{
    [DbContext(typeof(BigGameContext))]
    [Migration("20220325141834_createDB")]
    partial class createDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BigGame.Models.Boat", b =>
                {
                    b.Property<int>("BoatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BedCount")
                        .HasColumnType("int");

                    b.Property<string>("Desctription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("FuelCapacity")
                        .HasColumnType("real");

                    b.Property<float>("Length")
                        .HasColumnType("real");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.Property<int>("PassangerCapacity")
                        .HasColumnType("int");

                    b.Property<int>("SleepCapacity")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("BoatID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Boats");
                });

            modelBuilder.Entity("BigGame.Models.BoatAvailability", b =>
                {
                    b.Property<int>("BoatAvailabilityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BoatID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BoatAvailabilityID");

                    b.HasIndex("BoatID");

                    b.ToTable("BoatAvailabilities");
                });

            modelBuilder.Entity("BigGame.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BoatAvailabilityID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("endDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("startDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ReservationID");

                    b.HasIndex("BoatAvailabilityID");

                    b.HasIndex("UserID");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("BigGame.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BigGame.Models.Boat", b =>
                {
                    b.HasOne("BigGame.Models.User", "Owner")
                        .WithMany("Boats")
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("BigGame.Models.BoatAvailability", b =>
                {
                    b.HasOne("BigGame.Models.Boat", "Boat")
                        .WithMany("boatAvailabilities")
                        .HasForeignKey("BoatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boat");
                });

            modelBuilder.Entity("BigGame.Models.Reservation", b =>
                {
                    b.HasOne("BigGame.Models.BoatAvailability", "BoatAvailability")
                        .WithMany("Reservations")
                        .HasForeignKey("BoatAvailabilityID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BigGame.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BoatAvailability");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BigGame.Models.Boat", b =>
                {
                    b.Navigation("boatAvailabilities");
                });

            modelBuilder.Entity("BigGame.Models.BoatAvailability", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BigGame.Models.User", b =>
                {
                    b.Navigation("Boats");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
